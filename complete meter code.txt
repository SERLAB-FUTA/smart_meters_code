/* ATM90E26 + SD + OLED */
#include <energyic_UART.h>
#include <SoftwareSerial.h>
SoftwareSerial ATMSerial(PB15, PA8); //(RX, TX) RX to STM TX,TX to STM RX
ATM90E26_UART eic(&ATMSerial);
SoftwareSerial gprsSerial(PA3, PA2);

#include <ArduinoJson.h>

/***********************************************************/
char meter_id[] = "BED221";

/***********************************************************/
#include <SPI.h>
#include <SD.h>
File myFile;

float Voltage, Current, currentRead, ActivePower, activePower, PowerFactor, Frequency;
float energy, energyP, EnergyAcc = 0.00, currentEnergy = 0.00, EnergyPacc = 0.00, energyCal = 1145.6, energykWh = 0.00;
char buf[10];
String timeStamp;
int Reset = PB10;
#define SD_CS PA4  // Chip select line for SD card

/********************Variables for network time**************************/
int day, month, year, minute, second, hour;
String _buffer;
#define TIME_OUT_READ_SERIAL 5000

/***********************************************************/
#include <Adafruit_GFX.h>    // Core graphics library
#include <Adafruit_ST7735.h>
#include <Fonts/FreeSans9pt7b.h>
#include <Fonts/TomThumb.h>
#include "math.h"

//For ST7735
#define TFT_LED 0   // 0 if wired to +5V directly
#define TFT_CS  PB3  // SS
#define TFT_RST PB4
#define TFT_RS  PB5
#define TFT_SDI PB6  // MOSI
#define TFT_CLK PB7  // SCK
#define TFT_LED 0   // 0 if wired to +5V directly
#define ROTATE_ANGLE 10 // Angle in degrees to rotate the triangle

struct _point
{
  int16_t x;
  int16_t y;
};

// Variables and constants
_point c1, c2, c3, cc;

// Use hardware SPI (faster - on Uno: 13-SCK, 12-MISO, 11-MOSI)
Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_RS, TFT_SDI, TFT_CLK, TFT_RST);

// Variables and constants
uint16_t x, y;
boolean flag = false;
#define ROTATE_ANGLE 10 // Angle in degrees to rotate the triangle

//-----------------------------------------------------------
static const uint8_t PROGMEM ser[] =
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xFF, 0xF1, 0xFF, 0x8F, 0xF9, 0xFF, 0xC0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xFF, 0xF1, 0xFF, 0x8F, 0xF9, 0xFF, 0xC0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0xFF, 0xE1, 0xC3, 0x8E, 0x01, 0xC1, 0xC0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0xFB, 0xE1, 0xC3, 0x8E, 0x01, 0xC1, 0xC0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0xF7, 0xE1, 0xC3, 0x8E, 0x01, 0xC1, 0xC0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
  0xE7, 0xE1, 0xF0, 0x0E, 0x01, 0xC1, 0xC0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
  0xEF, 0xE0, 0x7C, 0x0F, 0xF1, 0xDF, 0xC0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
  0xCF, 0xC0, 0x3C, 0x0F, 0xF1, 0xDF, 0xC0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
  0x8F, 0xC0, 0x1F, 0x0E, 0x01, 0xDE, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
  0x0F, 0xC0, 0x07, 0x8E, 0x01, 0xCE, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
  0x1F, 0xC1, 0xC7, 0x8E, 0x01, 0xCF, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
  0x1F, 0xC1, 0xC3, 0x8E, 0x01, 0xC7, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8,
  0x1F, 0x81, 0xC3, 0x8E, 0x01, 0xC3, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8,
  0x1F, 0x81, 0xFF, 0x8F, 0xF9, 0xC3, 0xC0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0,
  0x3F, 0x81, 0xFF, 0x8F, 0xF9, 0xC3, 0xC0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xE0,
  0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xC0,
  0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x80,
  0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80,
  0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00,
  0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x00,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xC0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE,
  0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
  0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
  0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC,
  0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC,
  0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC,
  0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8,
  0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8,
  0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8,
  0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8,
  0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF1,
  0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF1,
  0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF7,
  0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF7,
  0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xEF,
  0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF,
  0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFC,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xC0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xC0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//-------------------------BULB ANIMATION BYTE DATA-----------------------------------
static const uint8_t PROGMEM bulb0[] =
{ // '0, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80,
  0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00,
  0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00,
  0x03, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x01,
  0xff, 0xe0, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x7f,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,
  0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const uint8_t PROGMEM bulb1[] =
{ // '1, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80,
  0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00,
  0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00,
  0x03, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x01,
  0xff, 0xe0, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x7f,
  0x00, 0x00, 0x00, 0x07, 0x7f, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00, 0x00, 0x00, 0x1f, 0x1e, 0x00,
  0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const uint8_t PROGMEM bulb2[] =
{
  // '2, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80,
  0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00,
  0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00,
  0x03, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x79,
  0xff, 0xe0, 0x00, 0x00, 0x79, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x7f,
  0x00, 0x00, 0x00, 0x07, 0x7f, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00,
  0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const uint8_t PROGMEM bulb3[] =
{
  // '3, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80,
  0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00,
  0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x63, 0xff, 0xf0, 0x00, 0x00, 0xe3, 0xff, 0xf0, 0x00, 0x00,
  0x23, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x39,
  0xff, 0xe0, 0x00, 0x00, 0x79, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x7f,
  0x00, 0x00, 0x00, 0x07, 0x7f, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00,
  0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const uint8_t PROGMEM bulb4[] =
{
  // '4, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x7f, 0x80,
  0x00, 0x00, 0x70, 0xff, 0x80, 0x00, 0x00, 0x39, 0xff, 0xc0, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00,
  0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x63, 0xff, 0xf0, 0x00, 0x00, 0xe3, 0xff, 0xf0, 0x00, 0x00,
  0x23, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x39,
  0xff, 0xe0, 0x00, 0x00, 0x79, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x7f,
  0x00, 0x00, 0x00, 0x07, 0x7f, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00,
  0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const uint8_t PROGMEM bulb6[] =
{
  // '6, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x7f, 0x80,
  0x00, 0x00, 0x70, 0xff, 0x80, 0x00, 0x00, 0x39, 0xff, 0xc0, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00,
  0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x63, 0xff, 0xf0, 0x00, 0x00, 0xe3, 0xff, 0xf0, 0x00, 0x00,
  0x23, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x39,
  0xff, 0xe0, 0x00, 0x00, 0x79, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x7f,
  0x00, 0x00, 0x00, 0x07, 0x7f, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00,
  0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const uint8_t PROGMEM bulb7[] =
{
  // '7, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04,
  0x06, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x00, 0x00, 0x00, 0x06, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x08,
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x7f, 0x80,
  0x00, 0x00, 0x70, 0xff, 0x80, 0x00, 0x00, 0x39, 0xff, 0xc0, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00,
  0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x63, 0xff, 0xf0, 0x00, 0x00, 0xe3, 0xff, 0xf0, 0x00, 0x00,
  0x23, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x39,
  0xff, 0xe0, 0x00, 0x00, 0x79, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x7f,
  0x00, 0x00, 0x00, 0x07, 0x7f, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00,
  0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const uint8_t PROGMEM bulb8[] =
{
  // '8, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04,
  0x06, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x04, 0x00, 0x00, 0x06, 0x0c, 0x1c, 0x00, 0x00, 0x06, 0x08,
  0x3c, 0x00, 0x00, 0x03, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x3f, 0x00,
  0x00, 0x00, 0x70, 0xff, 0x80, 0x00, 0x00, 0x39, 0xff, 0xc0, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00,
  0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x43, 0xff, 0xf0, 0x00, 0x00, 0xe3, 0xff, 0xf0, 0x00, 0x00,
  0x23, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x31,
  0xff, 0xe0, 0x00, 0x00, 0x79, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x7f,
  0x00, 0x00, 0x00, 0x07, 0x7f, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00, 0x00, 0x00, 0x1f, 0x1e, 0x00,
  0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const uint8_t PROGMEM bulb9[] =
{
  // '9, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04,
  0x06, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x04, 0x00, 0x00, 0x06, 0x0c, 0x1c, 0x00, 0x00, 0x06, 0x08,
  0x3c, 0x00, 0x00, 0x03, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x3f, 0x00,
  0x00, 0x00, 0x70, 0xff, 0x80, 0x00, 0x00, 0x39, 0xff, 0xc3, 0xe0, 0x00, 0x01, 0xff, 0xe7, 0xc0,
  0x00, 0x03, 0xff, 0xf2, 0x00, 0x00, 0x43, 0xff, 0xf0, 0x00, 0x00, 0xe3, 0xff, 0xf0, 0x00, 0x00,
  0x23, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x31,
  0xff, 0xe0, 0x00, 0x00, 0x79, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x7f,
  0x00, 0x00, 0x00, 0x07, 0x7f, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00, 0x00, 0x00, 0x1f, 0x1e, 0x00,
  0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const uint8_t PROGMEM bulb10[] =
{
  // '10, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04,
  0x06, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x04, 0x00, 0x00, 0x06, 0x0c, 0x1c, 0x00, 0x00, 0x06, 0x08,
  0x3c, 0x00, 0x00, 0x03, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x3f, 0x00,
  0x00, 0x00, 0x70, 0xff, 0x80, 0x00, 0x00, 0x39, 0xff, 0xc3, 0xe0, 0x00, 0x01, 0xff, 0xe7, 0xc0,
  0x00, 0x03, 0xff, 0xf2, 0x00, 0x00, 0x43, 0xff, 0xf0, 0x00, 0x00, 0xe3, 0xff, 0xf0, 0x00, 0x00,
  0x23, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x31,
  0xff, 0xe0, 0x00, 0x00, 0x79, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x7f,
  0x00, 0x00, 0x00, 0x07, 0x7f, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00, 0x00, 0x00, 0x1f, 0x1e, 0x00,
  0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const uint8_t PROGMEM bulb11[] =
{
  // '11, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04,
  0x06, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x04, 0x00, 0x00, 0x06, 0x0c, 0x1c, 0x00, 0x00, 0x06, 0x08,
  0x3c, 0x00, 0x00, 0x03, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x3f, 0x00,
  0x00, 0x00, 0x70, 0xff, 0x80, 0x00, 0x00, 0x39, 0xff, 0xc3, 0xe0, 0x00, 0x01, 0xff, 0xe7, 0xc0,
  0x00, 0x03, 0xff, 0xf2, 0x00, 0x00, 0x43, 0xff, 0xf0, 0x00, 0x00, 0xe3, 0xff, 0xf0, 0x00, 0x00,
  0x23, 0xff, 0xf3, 0x80, 0x00, 0x03, 0xff, 0xf3, 0xe0, 0x00, 0x01, 0xff, 0xf1, 0xe0, 0x00, 0x31,
  0xff, 0xe0, 0x00, 0x00, 0x79, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x7f,
  0x00, 0x00, 0x00, 0x07, 0x7f, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00, 0x00, 0x00, 0x1f, 0x1e, 0x00,
  0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const uint8_t PROGMEM bulb12[] =
{
  // '12, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04,
  0x06, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x04, 0x00, 0x00, 0x06, 0x0c, 0x1c, 0x00, 0x00, 0x06, 0x08,
  0x3c, 0x00, 0x00, 0x03, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x3f, 0x00,
  0x00, 0x00, 0x70, 0xff, 0x80, 0x00, 0x00, 0x39, 0xff, 0xc3, 0xe0, 0x00, 0x01, 0xff, 0xe7, 0xc0,
  0x00, 0x03, 0xff, 0xf2, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0xe3, 0xff, 0xf0, 0x00, 0x00,
  0x23, 0xff, 0xf3, 0x80, 0x00, 0x03, 0xff, 0xf3, 0xe0, 0x00, 0x01, 0xff, 0xf1, 0xe0, 0x00, 0x31,
  0xff, 0xe0, 0x00, 0x00, 0x79, 0xff, 0xe4, 0x00, 0x00, 0x00, 0x7f, 0xce, 0x00, 0x00, 0x00, 0x7f,
  0x07, 0x80, 0x00, 0x07, 0x7f, 0x01, 0x80, 0x00, 0x1f, 0x3e, 0x00, 0x00, 0x00, 0x1f, 0x1c, 0x00,
  0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const uint8_t PROGMEM bulb13[] =
{
  // '13, 40x40px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04,
  0x06, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x04, 0x00, 0x00, 0x06, 0x0c, 0x1c, 0x00, 0x00, 0x06, 0x08,
  0x3c, 0x00, 0x00, 0x03, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x3f, 0x00,
  0x00, 0x00, 0x70, 0xff, 0x80, 0x00, 0x00, 0x39, 0xff, 0xc3, 0xe0, 0x00, 0x01, 0xff, 0xe7, 0xc0,
  0x00, 0x03, 0xff, 0xf2, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0xe3, 0xff, 0xf0, 0x00, 0x00,
  0x23, 0xff, 0xf3, 0x80, 0x00, 0x03, 0xff, 0xf3, 0xe0, 0x00, 0x01, 0xff, 0xf1, 0xe0, 0x00, 0x31,
  0xff, 0xe0, 0x00, 0x00, 0x79, 0xff, 0xe4, 0x00, 0x00, 0x00, 0x7f, 0xce, 0x00, 0x00, 0x00, 0x7f,
  0x07, 0x80, 0x00, 0x07, 0x7f, 0x61, 0x80, 0x00, 0x1f, 0x3e, 0x70, 0x00, 0x00, 0x1f, 0x1c, 0x38,
  0x00, 0x00, 0x00, 0x1c, 0x3c, 0x00, 0x00, 0x00, 0x14, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//-------------------------BULB ANIMATION BYTE DATA-----------------------------------
// '0', 48x48px
const unsigned char upload0 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xc0, 0x00, 0xff, 0xf0,
  0x0f, 0xff, 0x80, 0x00, 0x7f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0x80, 0x00,
  0x1f, 0xf8, 0x1f, 0xf0, 0xc0, 0x00, 0x1f, 0xf8, 0x1f, 0xf0, 0x40, 0x00, 0x1f, 0xf8, 0x3f, 0xf0,
  0x00, 0x00, 0x0b, 0xfc, 0x3f, 0xe0, 0x00, 0x40, 0x0d, 0xfc, 0x3f, 0xc0, 0x00, 0xe0, 0x0d, 0xfc,
  0x3f, 0x80, 0x01, 0xf0, 0x0c, 0xfc, 0x3f, 0x80, 0x03, 0xf8, 0x08, 0xfc, 0x3f, 0x00, 0x06, 0xdc,
  0x08, 0xfc, 0x1f, 0x00, 0x0c, 0xce, 0x00, 0xf8, 0x1f, 0x00, 0x08, 0xc4, 0x00, 0xf8, 0x1f, 0x00,
  0x00, 0xc0, 0x01, 0xf8, 0x1f, 0x80, 0x00, 0xc0, 0x01, 0xf8, 0x0f, 0x80, 0x00, 0xc0, 0x03, 0xf0,
  0x0f, 0xc0, 0x00, 0xc0, 0x07, 0xf0, 0x0f, 0xf0, 0x00, 0xc0, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '1', 48x48px
const unsigned char upload1 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xc0, 0x00, 0xff, 0xf0,
  0x0f, 0xff, 0x80, 0x00, 0x7f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf0, 0xc0, 0x00, 0x1f, 0xf8, 0x1f, 0xf0, 0x40, 0x00, 0x0f, 0xf8, 0x3f, 0xf0,
  0x00, 0x00, 0x0f, 0xfc, 0x3f, 0xf0, 0x00, 0xe0, 0x0d, 0xfc, 0x3f, 0xc0, 0x01, 0xf0, 0x0c, 0xfc,
  0x3f, 0x80, 0x03, 0xf8, 0x0c, 0xfc, 0x3f, 0x80, 0x06, 0xdc, 0x08, 0xfc, 0x3f, 0x00, 0x0c, 0xcc,
  0x08, 0xfc, 0x1f, 0x00, 0x08, 0xc6, 0x00, 0xf8, 0x1f, 0x00, 0x00, 0xc0, 0x00, 0xf8, 0x1f, 0x00,
  0x00, 0xc0, 0x01, 0xf8, 0x1f, 0x80, 0x00, 0xc0, 0x01, 0xf8, 0x0f, 0x80, 0x00, 0xc0, 0x03, 0xf0,
  0x0f, 0xc0, 0x00, 0xc0, 0x07, 0xf0, 0x0f, 0xf0, 0x00, 0xc0, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '2', 48x48px
const unsigned char upload2 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf8, 0xc0, 0x00, 0x1f, 0xf8, 0x1f, 0xf0, 0x40, 0x00, 0x0f, 0xf8, 0x3f, 0xf0,
  0x00, 0xc0, 0x0f, 0xfc, 0x3f, 0xf0, 0x01, 0xe0, 0x0d, 0xfc, 0x3f, 0xe0, 0x03, 0xf0, 0x0c, 0xfc,
  0x3f, 0xc0, 0x07, 0xd8, 0x0c, 0xfc, 0x3f, 0x80, 0x0e, 0xcc, 0x0c, 0xfc, 0x3f, 0x80, 0x0c, 0x46,
  0x08, 0xfc, 0x1f, 0x00, 0x00, 0xc0, 0x00, 0xf8, 0x1f, 0x00, 0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x40, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x40, 0x03, 0xf0,
  0x0f, 0xe0, 0x00, 0x40, 0x07, 0xf0, 0x0f, 0xf0, 0x00, 0xc0, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '3', 48x48px
const unsigned char upload3 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf8, 0xc0, 0x00, 0x1f, 0xf8, 0x1f, 0xf0, 0x00, 0x40, 0x0f, 0xf8, 0x3f, 0xf0,
  0x00, 0xe0, 0x0f, 0xfc, 0x3f, 0xf0, 0x01, 0xf0, 0x0d, 0xfc, 0x3f, 0xe0, 0x03, 0x58, 0x0c, 0xfc,
  0x3f, 0xc0, 0x06, 0x4c, 0x0c, 0xfc, 0x3f, 0x80, 0x0c, 0x46, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x40,
  0x08, 0xfc, 0x1f, 0x00, 0x00, 0x40, 0x08, 0xf8, 0x1f, 0x00, 0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x40, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x40, 0x03, 0xf0,
  0x0f, 0xe0, 0x00, 0x40, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x40, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '4', 48x48px
const unsigned char upload4 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf8, 0x40, 0x40, 0x0f, 0xf8, 0x1f, 0xf0, 0x00, 0xe0, 0x0f, 0xf8, 0x3f, 0xf0,
  0x01, 0xf0, 0x0d, 0xfc, 0x3f, 0xf0, 0x03, 0xf8, 0x0d, 0xfc, 0x3f, 0xe0, 0x06, 0x4c, 0x0c, 0xfc,
  0x3f, 0xc0, 0x0c, 0x46, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x42, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x40,
  0x08, 0xfc, 0x1f, 0x80, 0x00, 0x40, 0x08, 0xf8, 0x1f, 0x80, 0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x40, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x40, 0x03, 0xf0,
  0x0f, 0xe0, 0x00, 0x40, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x60, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '5', 48x48px
const unsigned char upload5 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x1f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf8, 0x40, 0x60, 0x0f, 0xf8, 0x1f, 0xf0, 0x00, 0xf0, 0x0f, 0xf8, 0x3f, 0xf0,
  0x01, 0xf8, 0x0d, 0xfc, 0x3f, 0xf0, 0x07, 0x7c, 0x0d, 0xfc, 0x3f, 0xe0, 0x06, 0x6e, 0x0c, 0xfc,
  0x3f, 0xc0, 0x0c, 0x66, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x60, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x60,
  0x0c, 0x7c, 0x1f, 0x80, 0x00, 0x60, 0x08, 0xf8, 0x1f, 0x80, 0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x60, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x60, 0x03, 0xf0,
  0x0f, 0xe0, 0x00, 0x60, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x60, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '6', 48x48px
const unsigned char upload6 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x03, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x00, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x1f, 0xf8, 0x1f, 0xff, 0xc0, 0x40,
  0x1f, 0xf8, 0x1f, 0xf8, 0x40, 0xe0, 0x0f, 0xf8, 0x1f, 0xf0, 0x01, 0xf0, 0x0f, 0xf8, 0x3f, 0xf0,
  0x03, 0x78, 0x0d, 0xfc, 0x3f, 0xf0, 0x06, 0x6c, 0x0d, 0xfc, 0x3f, 0xe0, 0x0c, 0x66, 0x0c, 0xfc,
  0x3f, 0xc0, 0x00, 0x60, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x60, 0x0c, 0x7c, 0x3f, 0x80, 0x00, 0x60,
  0x0c, 0x7c, 0x1f, 0x80, 0x00, 0x60, 0x08, 0x78, 0x1f, 0x80, 0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x60, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x60, 0x01, 0xf0,
  0x0f, 0xe0, 0x00, 0x60, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x60, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '7', 48x48px
const unsigned char upload7 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x03, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x00, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x1f, 0xf8, 0x1f, 0xff, 0xc0, 0x60,
  0x1f, 0xf8, 0x1f, 0xf8, 0x40, 0xf0, 0x0f, 0xf8, 0x1f, 0xf0, 0x01, 0xf8, 0x0f, 0xf8, 0x3f, 0xf0,
  0x03, 0x6c, 0x0d, 0xfc, 0x3f, 0xf0, 0x06, 0x66, 0x0c, 0xfc, 0x3f, 0xe0, 0x0c, 0x62, 0x0c, 0xfc,
  0x3f, 0xc0, 0x00, 0x60, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x60, 0x0c, 0x7c, 0x3f, 0x80, 0x00, 0x60,
  0x0c, 0x7c, 0x1f, 0x80, 0x00, 0x60, 0x08, 0x78, 0x1f, 0x80, 0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x60, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x60, 0x01, 0xf0,
  0x0f, 0xe0, 0x00, 0x60, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x60, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '8', 48x48px
const unsigned char upload8 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x03, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x00, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x1f, 0xf8, 0x1f, 0xff, 0xc0, 0x60,
  0x1f, 0xf8, 0x1f, 0xf8, 0x40, 0xf0, 0x0f, 0xf8, 0x1f, 0xf0, 0x01, 0xf8, 0x0f, 0xf8, 0x3f, 0xf0,
  0x03, 0x6c, 0x0d, 0xfc, 0x3f, 0xf0, 0x06, 0x66, 0x0c, 0xfc, 0x3f, 0xe0, 0x0c, 0x62, 0x0c, 0xfc,
  0x3f, 0xc0, 0x00, 0x60, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x60, 0x0c, 0x7c, 0x3f, 0x80, 0x00, 0x60,
  0x0c, 0x7c, 0x1f, 0x80, 0x00, 0x60, 0x08, 0x78, 0x1f, 0x80, 0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x60, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x60, 0x01, 0xf0,
  0x0f, 0xe0, 0x00, 0x60, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x60, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '9', 48x48px
const unsigned char upload9 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x03, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x00, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x1f, 0xf8, 0x1f, 0xff, 0xc0, 0x60,
  0x1f, 0xf8, 0x1f, 0xf8, 0x40, 0xf0, 0x0f, 0xf8, 0x1f, 0xf0, 0x01, 0xf8, 0x0f, 0xf8, 0x3f, 0xf0,
  0x03, 0x6c, 0x0d, 0xfc, 0x3f, 0xf0, 0x06, 0x66, 0x0c, 0xfc, 0x3f, 0xe0, 0x0c, 0x62, 0x0c, 0xfc,
  0x3f, 0xc0, 0x00, 0x60, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x60, 0x0c, 0x7c, 0x3f, 0x80, 0x00, 0x60,
  0x0c, 0x7c, 0x1f, 0x80, 0x00, 0x60, 0x08, 0x78, 0x1f, 0x80, 0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x60, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x60, 0x01, 0xf0,
  0x0f, 0xe0, 0x00, 0x60, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x60, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '10', 48x48px
const unsigned char upload10 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x03, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x00, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x1f, 0xf8, 0x1f, 0xff, 0xc0, 0x60,
  0x1f, 0xf8, 0x1f, 0xf8, 0x40, 0xf0, 0x0f, 0xf8, 0x1f, 0xf0, 0x01, 0xf8, 0x0f, 0xf8, 0x3f, 0xf0,
  0x03, 0x7c, 0x0d, 0xfc, 0x3f, 0xf0, 0x06, 0x6e, 0x0d, 0xfc, 0x3f, 0xe0, 0x0c, 0x66, 0x0c, 0xfc,
  0x3f, 0xc0, 0x00, 0x60, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x60, 0x0c, 0x7c, 0x3f, 0x80, 0x00, 0x60,
  0x0c, 0x7c, 0x1f, 0x80, 0x00, 0x60, 0x08, 0x78, 0x1f, 0x80, 0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x60, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x60, 0x01, 0xf0,
  0x0f, 0xe0, 0x00, 0x60, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x60, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '11', 48x48px
const unsigned char upload11 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x03, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x00, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x1f, 0xf8, 0x1f, 0xff, 0xc0, 0x60,
  0x1f, 0xf8, 0x1f, 0xf8, 0x40, 0xf0, 0x0f, 0xf8, 0x1f, 0xf0, 0x01, 0xf8, 0x0f, 0xf8, 0x3f, 0xf0,
  0x03, 0x7c, 0x0d, 0xfc, 0x3f, 0xf0, 0x06, 0x6e, 0x0d, 0xfc, 0x3f, 0xe0, 0x0c, 0x66, 0x0c, 0xfc,
  0x3f, 0xc0, 0x00, 0x60, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x60, 0x0c, 0x7c, 0x3f, 0x80, 0x00, 0x60,
  0x0c, 0x7c, 0x1f, 0x80, 0x00, 0x60, 0x08, 0x78, 0x1f, 0x80, 0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x60, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x60, 0x01, 0xf0,
  0x0f, 0xe0, 0x00, 0x60, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x60, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '12', 48x48px
const unsigned char upload12 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x03, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x00, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x1f, 0xf8, 0x1f, 0xff, 0xc0, 0x40,
  0x1f, 0xf8, 0x1f, 0xf8, 0x40, 0xe0, 0x0f, 0xf8, 0x1f, 0xf0, 0x01, 0xf0, 0x0f, 0xf8, 0x3f, 0xf0,
  0x03, 0xf8, 0x0d, 0xfc, 0x3f, 0xf0, 0x07, 0x6c, 0x0d, 0xfc, 0x3f, 0xe0, 0x0e, 0x66, 0x0c, 0xfc,
  0x3f, 0xc0, 0x00, 0x62, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x60, 0x0c, 0x7c, 0x3f, 0x80, 0x00, 0x60,
  0x0c, 0x7c, 0x1f, 0x80, 0x00, 0x60, 0x08, 0xf8, 0x1f, 0x80, 0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x60, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x60, 0x01, 0xf0,
  0x0f, 0xe0, 0x00, 0x60, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x60, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '13', 48x48px
const unsigned char upload13 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x1f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf8, 0x40, 0x60, 0x0f, 0xf8, 0x1f, 0xf0, 0x00, 0xf0, 0x0f, 0xf8, 0x3f, 0xf0,
  0x01, 0xf8, 0x0d, 0xfc, 0x3f, 0xf0, 0x03, 0x7c, 0x0d, 0xfc, 0x3f, 0xe0, 0x06, 0x6e, 0x0c, 0xfc,
  0x3f, 0xc0, 0x0c, 0x66, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x60, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x60,
  0x0c, 0x7c, 0x1f, 0x80, 0x00, 0x60, 0x08, 0xf8, 0x1f, 0x80, 0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x60, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x60, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x60, 0x03, 0xf0,
  0x0f, 0xe0, 0x00, 0x60, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x60, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '14', 48x48px
const unsigned char upload14 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf8, 0x40, 0x40, 0x0f, 0xf8, 0x1f, 0xf0, 0x00, 0xe0, 0x0f, 0xf8, 0x3f, 0xf0,
  0x01, 0xf0, 0x0d, 0xfc, 0x3f, 0xf0, 0x03, 0x78, 0x0d, 0xfc, 0x3f, 0xe0, 0x06, 0x4c, 0x0c, 0xfc,
  0x3f, 0xc0, 0x0c, 0x46, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x40, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x40,
  0x08, 0xfc, 0x1f, 0x80, 0x00, 0x40, 0x08, 0xf8, 0x1f, 0x80, 0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x40, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x40, 0x03, 0xf0,
  0x0f, 0xe0, 0x00, 0x40, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x60, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '15', 48x48px
const unsigned char upload15 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf8, 0xc0, 0x00, 0x0f, 0xf8, 0x1f, 0xf0, 0x00, 0xe0, 0x0f, 0xf8, 0x3f, 0xf0,
  0x01, 0xf0, 0x0f, 0xfc, 0x3f, 0xf0, 0x03, 0xf8, 0x0d, 0xfc, 0x3f, 0xe0, 0x07, 0x4c, 0x0c, 0xfc,
  0x3f, 0xc0, 0x0e, 0x46, 0x0c, 0xfc, 0x3f, 0x80, 0x0c, 0x42, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x40,
  0x08, 0xfc, 0x1f, 0x80, 0x00, 0x40, 0x08, 0xf8, 0x1f, 0x80, 0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x40, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x40, 0x03, 0xf0,
  0x0f, 0xe0, 0x00, 0x40, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x40, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '16', 48x48px
const unsigned char upload16 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf8, 0xc0, 0x00, 0x1f, 0xf8, 0x1f, 0xf0, 0x00, 0x40, 0x0f, 0xf8, 0x3f, 0xf0,
  0x00, 0xe0, 0x0f, 0xfc, 0x3f, 0xf0, 0x01, 0xf0, 0x0d, 0xfc, 0x3f, 0xe0, 0x03, 0x58, 0x0c, 0xfc,
  0x3f, 0xc0, 0x06, 0x4c, 0x0c, 0xfc, 0x3f, 0x80, 0x0c, 0x46, 0x0c, 0xfc, 0x3f, 0x80, 0x00, 0x40,
  0x08, 0xfc, 0x1f, 0x00, 0x00, 0x40, 0x08, 0xf8, 0x1f, 0x00, 0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x40, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x40, 0x03, 0xf0,
  0x0f, 0xe0, 0x00, 0x40, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0x40, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '17', 48x48px
const unsigned char upload17 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf8, 0xc0, 0x00, 0x1f, 0xf8, 0x1f, 0xf0, 0x00, 0x40, 0x0f, 0xf8, 0x3f, 0xf0,
  0x00, 0xe0, 0x0f, 0xfc, 0x3f, 0xf0, 0x01, 0xf0, 0x0d, 0xfc, 0x3f, 0xe0, 0x03, 0xf8, 0x0c, 0xfc,
  0x3f, 0xc0, 0x06, 0x4c, 0x0c, 0xfc, 0x3f, 0x80, 0x0c, 0x46, 0x0c, 0xfc, 0x3f, 0x80, 0x08, 0x42,
  0x08, 0xfc, 0x1f, 0x00, 0x00, 0x40, 0x00, 0xf8, 0x1f, 0x00, 0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x40, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x40, 0x03, 0xf0,
  0x0f, 0xe0, 0x00, 0x40, 0x07, 0xf0, 0x0f, 0xf8, 0x00, 0xc0, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '18', 48x48px
const unsigned char upload18 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x7f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf8, 0xc0, 0x00, 0x1f, 0xf8, 0x1f, 0xf0, 0x40, 0x00, 0x0f, 0xf8, 0x3f, 0xf0,
  0x00, 0xc0, 0x0f, 0xfc, 0x3f, 0xf0, 0x01, 0xe0, 0x0d, 0xfc, 0x3f, 0xe0, 0x03, 0xf0, 0x0c, 0xfc,
  0x3f, 0xc0, 0x07, 0xd8, 0x0c, 0xfc, 0x3f, 0x80, 0x0e, 0xcc, 0x0c, 0xfc, 0x3f, 0x80, 0x0c, 0x46,
  0x08, 0xfc, 0x1f, 0x00, 0x00, 0xc0, 0x00, 0xf8, 0x1f, 0x00, 0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80,
  0x00, 0x40, 0x00, 0xf8, 0x1f, 0x80, 0x00, 0x40, 0x01, 0xf8, 0x0f, 0xc0, 0x00, 0x40, 0x03, 0xf0,
  0x0f, 0xe0, 0x00, 0x40, 0x07, 0xf0, 0x0f, 0xf0, 0x00, 0xc0, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '19', 48x48px
const unsigned char upload19 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xc0, 0x00, 0xff, 0xf0,
  0x0f, 0xff, 0xc0, 0x00, 0x7f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf8, 0xc0, 0x00, 0x1f, 0xf8, 0x1f, 0xf0, 0x40, 0x00, 0x0f, 0xf8, 0x3f, 0xf0,
  0x00, 0x40, 0x0f, 0xfc, 0x3f, 0xf0, 0x00, 0xe0, 0x0d, 0xfc, 0x3f, 0xc0, 0x01, 0xf0, 0x0c, 0xfc,
  0x3f, 0x80, 0x03, 0xd8, 0x0c, 0xfc, 0x3f, 0x80, 0x06, 0xcc, 0x08, 0xfc, 0x3f, 0x00, 0x0c, 0xc6,
  0x08, 0xfc, 0x1f, 0x00, 0x08, 0xc0, 0x00, 0xf8, 0x1f, 0x00, 0x00, 0xc0, 0x00, 0xf8, 0x1f, 0x00,
  0x00, 0xc0, 0x01, 0xf8, 0x1f, 0x80, 0x00, 0xc0, 0x01, 0xf8, 0x0f, 0x80, 0x00, 0xc0, 0x03, 0xf0,
  0x0f, 0xc0, 0x00, 0xc0, 0x07, 0xf0, 0x0f, 0xf0, 0x00, 0xc0, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '20', 48x48px
const unsigned char upload20 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xc0, 0x00, 0xff, 0xf0,
  0x0f, 0xff, 0x80, 0x00, 0x7f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf0, 0xc0, 0x00, 0x1f, 0xf8, 0x1f, 0xf0, 0x40, 0x00, 0x0f, 0xf8, 0x3f, 0xf0,
  0x00, 0x00, 0x0f, 0xfc, 0x3f, 0xf0, 0x00, 0xe0, 0x0d, 0xfc, 0x3f, 0xc0, 0x01, 0xf0, 0x0c, 0xfc,
  0x3f, 0x80, 0x03, 0xf8, 0x0c, 0xfc, 0x3f, 0x80, 0x06, 0xdc, 0x08, 0xfc, 0x3f, 0x00, 0x0c, 0xcc,
  0x08, 0xfc, 0x1f, 0x00, 0x08, 0xc6, 0x00, 0xf8, 0x1f, 0x00, 0x00, 0xc0, 0x00, 0xf8, 0x1f, 0x00,
  0x00, 0xc0, 0x01, 0xf8, 0x1f, 0x80, 0x00, 0xc0, 0x01, 0xf8, 0x0f, 0x80, 0x00, 0xc0, 0x03, 0xf0,
  0x0f, 0xc0, 0x00, 0xc0, 0x07, 0xf0, 0x0f, 0xf0, 0x00, 0xc0, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '21', 48x48px
const unsigned char upload21 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xc0, 0x00, 0xff, 0xf0,
  0x0f, 0xff, 0x80, 0x00, 0x7f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf0, 0xc0, 0x00, 0x1f, 0xf8, 0x1f, 0xf0, 0x40, 0x00, 0x0f, 0xf8, 0x3f, 0xf0,
  0x00, 0x00, 0x0f, 0xfc, 0x3f, 0xf0, 0x00, 0xc0, 0x0d, 0xfc, 0x3f, 0xc0, 0x01, 0xe0, 0x0d, 0xfc,
  0x3f, 0x80, 0x03, 0xf0, 0x0c, 0xfc, 0x3f, 0x80, 0x07, 0xd8, 0x08, 0xfc, 0x3f, 0x00, 0x0e, 0xcc,
  0x08, 0xfc, 0x1f, 0x00, 0x0c, 0xc6, 0x00, 0xf8, 0x1f, 0x00, 0x00, 0xc0, 0x00, 0xf8, 0x1f, 0x00,
  0x00, 0xc0, 0x01, 0xf8, 0x1f, 0x80, 0x00, 0xc0, 0x01, 0xf8, 0x0f, 0x80, 0x00, 0xc0, 0x03, 0xf0,
  0x0f, 0xc0, 0x00, 0xc0, 0x07, 0xf0, 0x0f, 0xf0, 0x00, 0xc0, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '22', 48x48px
const unsigned char upload22 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xc0, 0x00, 0xff, 0xf0,
  0x0f, 0xff, 0x80, 0x00, 0x7f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0xc0, 0x00,
  0x1f, 0xf8, 0x1f, 0xf0, 0xc0, 0x00, 0x1f, 0xf8, 0x1f, 0xf0, 0x40, 0x00, 0x0f, 0xf8, 0x3f, 0xf0,
  0x00, 0x00, 0x0f, 0xfc, 0x3f, 0xf0, 0x00, 0xc0, 0x0d, 0xfc, 0x3f, 0xc0, 0x01, 0xe0, 0x0d, 0xfc,
  0x3f, 0x80, 0x03, 0xf0, 0x0c, 0xfc, 0x3f, 0x80, 0x07, 0xd8, 0x08, 0xfc, 0x3f, 0x00, 0x0e, 0xcc,
  0x08, 0xfc, 0x1f, 0x00, 0x0c, 0xc6, 0x00, 0xf8, 0x1f, 0x00, 0x00, 0xc0, 0x00, 0xf8, 0x1f, 0x00,
  0x00, 0xc0, 0x01, 0xf8, 0x1f, 0x80, 0x00, 0xc0, 0x01, 0xf8, 0x0f, 0x80, 0x00, 0xc0, 0x03, 0xf0,
  0x0f, 0xc0, 0x00, 0xc0, 0x07, 0xf0, 0x0f, 0xf0, 0x00, 0xc0, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '24', 48x48px
const unsigned char upload24 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xc0, 0x00, 0xff, 0xf0,
  0x0f, 0xff, 0x80, 0x00, 0x7f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0x80, 0x00,
  0x1f, 0xf8, 0x1f, 0xf0, 0xc0, 0x00, 0x1f, 0xf8, 0x1f, 0xf0, 0x40, 0x00, 0x1f, 0xf8, 0x3f, 0xf0,
  0x00, 0x00, 0x0b, 0xfc, 0x3f, 0xe0, 0x00, 0x40, 0x0d, 0xfc, 0x3f, 0xc0, 0x00, 0xe0, 0x0d, 0xfc,
  0x3f, 0x80, 0x01, 0xf0, 0x0c, 0xfc, 0x3f, 0x80, 0x03, 0xf8, 0x08, 0xfc, 0x3f, 0x00, 0x06, 0xdc,
  0x08, 0xfc, 0x1f, 0x00, 0x0c, 0xce, 0x00, 0xf8, 0x1f, 0x00, 0x08, 0xc4, 0x00, 0xf8, 0x1f, 0x00,
  0x00, 0xc0, 0x01, 0xf8, 0x1f, 0x80, 0x00, 0xc0, 0x01, 0xf8, 0x0f, 0x80, 0x00, 0xc0, 0x03, 0xf0,
  0x0f, 0xc0, 0x00, 0xc0, 0x07, 0xf0, 0x0f, 0xf0, 0x00, 0xc0, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '23', 48x48px
const unsigned char upload23 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07,
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff,
  0xfc, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0xc0, 0x00, 0xff, 0xf0,
  0x0f, 0xff, 0x80, 0x00, 0x7f, 0xf0, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x1f, 0xff, 0x80, 0x00,
  0x1f, 0xf8, 0x1f, 0xf0, 0xc0, 0x00, 0x1f, 0xf8, 0x1f, 0xf0, 0x40, 0x00, 0x1f, 0xf8, 0x3f, 0xf0,
  0x00, 0x00, 0x0b, 0xfc, 0x3f, 0xf0, 0x00, 0x40, 0x0d, 0xfc, 0x3f, 0xc0, 0x00, 0xe0, 0x0d, 0xfc,
  0x3f, 0x80, 0x01, 0xf0, 0x0c, 0xfc, 0x3f, 0x80, 0x03, 0xf8, 0x08, 0xfc, 0x3f, 0x00, 0x06, 0xdc,
  0x08, 0xfc, 0x1f, 0x00, 0x0c, 0xce, 0x00, 0xf8, 0x1f, 0x00, 0x08, 0xc0, 0x00, 0xf8, 0x1f, 0x00,
  0x00, 0xc0, 0x01, 0xf8, 0x1f, 0x80, 0x00, 0xc0, 0x01, 0xf8, 0x0f, 0x80, 0x00, 0xc0, 0x03, 0xf0,
  0x0f, 0xc0, 0x00, 0xc0, 0x07, 0xf0, 0x0f, 0xf0, 0x00, 0xc0, 0x1f, 0xf0, 0x07, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

/***********************************************************/
void setup() {
  Serial.begin(115200);

  tft.initR(INITR_BLACKTAB);      // Init ST7735S chip, black tab
  tft.setRotation(-1);
  tft.fillScreen(ST77XX_BLACK);

  Serial.println("\nSMART MONITOR Started"); delay(1000);
 gprsSerial.begin(9600);   //For Yellow headers GSM module
//  gprsSerial.begin(19200);   //For Black headers GSM module

  pinMode(Reset, OUTPUT);
  digitalWrite(Reset, HIGH);

  /********************Display Startup Image1**********************/
  //First initializer: SER Logo Display
  tft.setFont(&FreeSans9pt7b);
  tft.drawBitmap(0, 0, ser, 128, 104, ST77XX_BLUE);
  tft.setCursor(0, 110);
  tft.setTextColor(ST7735_YELLOW);
  tft.setTextSize(1);        delay(1000);
  tft.fillScreen(ST77XX_BLACK);

  /*************Energy Readings Initialization***************/
  Serial.println("\nATM90E26 UART Started");
  ATMSerial.begin(9600);
  eic.InitEnergyIC();                             delay(1000);

  Serial.print("Initializing SD card...");
  while (!SD.begin(PA4)) {
    Serial.println("initialization failed!");
  }
  Serial.println("SD initialization done successfully.");

  /********************Display Startup Image2**********************/
  // Define triangle start coordinates
  c1.x = 40;    c1.y = 43;
  c2.x = 105;   c2.y = 63;
  c3.x = 82;   c3.y = 93;

  cc = getCoordCentroid(c1, c2, c3);
  int16_t steps = (int16_t)(360 / ROTATE_ANGLE);

  tft.setCursor(3, 15);
  tft.setTextColor(ST7735_YELLOW);
  tft.print("SER Smart Monitor");
  tft.setCursor(45, 123);
  tft.setTextColor(ST7735_YELLOW);
  tft.print("Starting...");
  for (int8_t i = 0; i < steps; i++) {
    // Draw triangle
    tft.drawTriangle(c1.x, c1.y, c2.x, c2.y, c3.x, c3.y, ST77XX_BLUE);
    // Rotate triangle
    rotateTriangle(c1, c2, c3, cc, ROTATE_ANGLE);
    delay(50);
  }

  /********************Read saved Energy**********************/
  currentEnergy = readSavedEnergy();

  /****************Open COUNT file for reading****************/
  int previousCount = countTimeout(); //Open and Read
  int newCount = previousCount + 1;   //Add 1 to value read
  updateCount(newCount);              //Update the count

  /*************GPRS Communication Initialization***************/
  gprsSerial.listen();

  gprsSerial.println("AT");
  delay(500);

  gprsSerial.println("AT+CREG=?");     //Check Network regiistration, wait a while
  delay(500);

  gprsSerial.println("AT+SAPBR=3,1,\"Contype\",\"GPRS\"");  //Specify the connection type
  delay(500);
  ShowSerialData();

  gprsSerial.println("AT+SAPBR=3,1,\"APN\",\"web.gprs.mtnnigeria.net\"");//Specify the APN
  delay(500);
  ShowSerialData();

  gprsSerial.println("AT+CLTS = 1; &W");
  delay(500);
  ShowSerialData();

  gprsSerial.println("AT+CFUN = 1, 1");
  delay(1000);
  ShowSerialData();

  //--------------------------------------------------------------
  tft.fillScreen(ST77XX_BLACK);
}


void loop() {
  char chr;     int16_t ival;   uint8_t len;

  /**************Take readings from GSM & ASIC, Display on OLED, Print to Serial, Save to SD**********/
  gprsSerial.flush();
  gprsSerial.println("AT+CCLK?");
  delay(1000);
  _buffer = _readSerial();
  String _buffer2 = _buffer.substring(_buffer.indexOf("\"") + 1, _buffer.lastIndexOf("\"") - 1);
  Serial.print("buffer 2: ");
  Serial.println(_buffer2);
  String yearString = _buffer2.substring(0, 2);
  String monthString = _buffer2.substring(3, 5);
  String dayString = _buffer2.substring(6, 8);
  String hourString = _buffer2.substring(9, 11);
  String minuteString = _buffer2.substring(12, 14);
  String secondString = _buffer2.substring(15, 17);
  timeStamp = "20" + yearString + "-" + monthString + "-" + dayString + " " + hourString + ":" + minuteString + ":" + secondString;
  Serial.print("timeStamp: ");
  Serial.println(timeStamp);

  takeReadings();           delay(10);
  displayData();            delay(10);
  serialPrintData();        delay(10);
  saveEnergyData();         delay(10);

  //***********************************************************
  if (EnergyAcc > currentEnergy + 0.01) {      //if true, remove the energy file "kWhval" and save new energy value
    Serial.print("New energy value is ");  Serial.println(EnergyAcc);
    updateEnergy(EnergyAcc);
  }
  Serial.println("");
  currentEnergy = EnergyAcc;

  //*******************************Animate Bulb****************************
  displayBulb(55, 10);

  //*******************************Post to API and Animate Upload****************************
  postData();                //Post to API
  displayUpload(57, 75);     //Animate Upload

  gprsSerial.flush();

  Serial.println("Cycle completed\n");
  delay(1000);
}

/****************************FUNCTIONS*******************************/

/****************************Display Data*******************************/
void displayData() {
  tft.fillRect(60, 10, 40, 40, ST77XX_BLACK); //Clear Bulb
  tft.fillRect(2, 5, 40, 20, ST77XX_BLACK); //Clear Volt
  tft.fillRect(110, 5, 40, 20, ST77XX_BLACK); //Clear Frequency
  tft.fillRect(110, 86, 40, 20, ST77XX_BLACK); //Clear Energy
  tft.fillRect(2, 86, 50, 20, ST77XX_BLACK); //Clear Power
  tft.fillRect(57, 75, 50, 50, ST77XX_BLACK); //Clear Upload

  tft.setFont(&FreeSans9pt7b);

  tft.setTextColor(ST7735_BLUE);
  tft.setCursor(5, 20);
  tft.print(String (Voltage, 0));
  tft.setCursor(110, 20);
  tft.print(String (Frequency, 1));
  tft.setTextColor(ST7735_WHITE);
  tft.setCursor(15, 40);
  tft.print("V");
  tft.setCursor(120, 40);
  tft.print("Hz");

  tft.setTextColor(ST7735_BLUE);
  tft.setCursor(5, 105);
  tft.print(String (ActivePower, 0));
  tft.setCursor(110, 105);
  tft.print(String (energykWh, 0));
  tft.setTextColor(ST7735_WHITE);
  tft.setCursor(25, 120);
  tft.print("W");
  tft.setCursor(110, 120);
  tft.print("kWh");
}

/****************************Save Energy Data*******************************/
void saveEnergyData() {
  myFile = SD.open("energy.txt", FILE_WRITE);
  if (myFile)
  {
    myFile.print(timeStamp);       myFile.print(F(","));
    myFile.print(Current, 3);       myFile.print(F(","));
    myFile.print(Voltage, 2);       myFile.print(F(","));
    myFile.print(PowerFactor, 2);   myFile.print(F(","));
    myFile.print(Frequency, 2);     myFile.print(F(","));
    myFile.print(ActivePower, 3);   myFile.print(F(","));
    myFile.print(EnergyAcc, 5);     myFile.print(F(","));
    myFile.println(energykWh, 5);   myFile.close();
    Serial.println(F("Data written to log file: energydata"));
  } else {
    Serial.println(F("Couldn't open log file: energydata"));
  }
}

/****************************Read Saved Energy value*******************************/
float readSavedEnergy() { // Open the file for reading:
  String ret = " ", rEAD = " ";
  myFile = SD.open("kWhval.txt");
  if (myFile) {
    Serial.print("Reading from kWhval.txt:");
    while (myFile.available()) {
      char cHAR = (char)myFile.read();  //      Serial.print(cHAR);
      ret = String(cHAR);
      rEAD += ret;                      //      Serial.print(rEAD);
    }
    myFile.close();
  } else {
    Serial.println("error opening kWhval.txt");
  }
  Serial.print("Convert to Float: ");
  float valRead = rEAD.toFloat();     Serial.println(valRead, 3);
  return valRead;
}

/****************************Update Saved Energy value*******************************/
void updateEnergy(float Energy) {
  Serial.println("Removing kWhval.txt...");    SD.remove("kWhval.txt");

  myFile = SD.open("kWhval.txt", FILE_WRITE);
  if (myFile) {
    Serial.print("Writing new energy: ");  Serial.print(Energy);
    myFile.println(Energy);                 myFile.close();
    Serial.println(" . . .done.");
  } else {
    Serial.println("error opening kWhval.txt");
  }
}

/****************************Take Energy Readings*******************************/
void takeReadings() {
  ATMSerial.begin(9600);
  Serial.print("Sys Status:");    unsigned short s_status = eic.GetSysStatus();
  if (s_status == 0xFFFF) {
    Serial.println("Meter not ready");
  }

  Serial.println(eic.GetSysStatus(), HEX);      delay(10);
  Serial.print("Meter Status:");  unsigned short meter_status = eic.GetMeterStatus();
  Serial.println(meter_status);
  if (meter_status == 0xFFFF) {
    Serial.println("Error! Taking no readings!");
  }

  else {
    Voltage      = abs(eic.GetLineVoltage() * 2);     delay(10);
    if (Voltage == 0.00) {
      int previousCount = countTimeout();             //if reset, subtract 1 from count to balance the "void setup addition"
      int newCount = previousCount - 1;
      updateCount(newCount);
      Serial.println("Resetting . . .");              delay(100);
      digitalWrite(Reset, LOW);                       //Reset the MCU
    }
    Current      = (abs(eic.GetLineCurrent())) * 2;     delay(10);
    //    ActivePower  = (abs(eic.GetActivePower())) * 4;   delay(10);
    PowerFactor  = abs(eic.GetPowerFactor());           delay(10);
    ActivePower  = (Voltage * Current * PowerFactor);   delay(10);
    Frequency    = (eic.GetFrequency() * 0.9767);       delay(10);
    energyP      = eic.GetAbsoluteEnergy();             delay(10);
    EnergyPacc   = EnergyPacc + energyP;
    energy       = energyP * energyCal;
    EnergyAcc    = currentEnergy + energy;        //Current energy read from storage and the new energy saved at the end of the loop
    energykWh    = EnergyAcc / 1000;
  }
}

/****************************Set/Read Date and Time*******************************/
void postData() {
  String readingsText = String(meter_id) + "," + String(timeStamp) + "," + String(Current, 3) + "," +
                        String(Voltage) + "," + String(Frequency) + "," + String(PowerFactor) + "," + String(energykWh, 4);
  Serial.print("readings Text: ");         Serial.println(readingsText);

  String encryptedData = encryptData(readingsText);
  Serial.print("encrypted Data: ");         Serial.println(encryptedData);

  /*Data Serialization*/
  StaticJsonDocument<200> doc;
  doc["data"]  = encryptedData;

  serializeJson(doc, Serial);
  Serial.println(F(" "));

  char results[256] PROGMEM;
  serializeJsonPretty(doc, results);
  Serial.println(results);
  delay(1000);

  /*GSM Communication Starts*/
  gprsSerial.flush();
  gprsSerial.listen();

  gprsSerial.println("AT+SAPBR=1,1");
  delay(2000);
  ShowSerialData();

  gprsSerial.println("AT+SAPBR=2,1");
  delay(500);
  ShowSerialData();

  gprsSerial.println("AT+HTTPINIT");
  delay(1000);
  ShowSerialData();

  gprsSerial.println("AT+CLTS?");
  delay(1000);
  ShowSerialData();

  gprsSerial.println("AT+HTTPPARA=\"CID\",1");  //Set bearer profile ID of the connection (settings above) to 1
  delay(2000);
  ShowSerialData();

  gprsSerial.println("AT+HTTPPARA=\"URL\",\"http://xxxxxxxxxxxxxxxxxxxxx\""); //Put your own Server address here
  delay(5000);
  ShowSerialData();

  gprsSerial.println("AT+HTTPPARA=\"USERDATA\",\"Authorization: Token xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"");  //If you need aythorization, supply your token. If not, remove this part
  delay(1000);
  ShowSerialData();

  gprsSerial.println("AT+HTTPPARA=\"CONTENT\",\"application/json\"");
  delay(1000);
  ShowSerialData();

  gprsSerial.println("AT+HTTPDATA=" + String(strlen(results)) + ",100000");
  delay(4000);   //Timeout after 10sec of inactivity
  ShowSerialData();

  gprsSerial.println(results);
  delay(3000);
  Serial.println(results);
  ShowSerialData;

  gprsSerial.println("AT+HTTPACTION=1");
  delay(10000);
  ShowSerialData();

  gprsSerial.println("AT+HTTPREAD");
  delay(1000);
  ShowSerialData();

  gprsSerial.println("AT+HTTPTERM");
  delay(2000);
  ShowSerialData;

  gprsSerial.println("AT+SAPBR=0,1");
  delay(2000);
  ShowSerialData;

  gprsSerial.flush();
}

/***************************************Encrypt data*********************************/
String encryptData(String valueText) {
//You will need to define your own encryption process or omit it
}

/*******************************Read timeout Count*********************************/
int countTimeout() { // Open the file for reading:
  String ret = " ", rEAD = " ";
  myFile = SD.open("count.txt");
  if (myFile) {
    Serial.print("Reading from count.txt:");
    while (myFile.available()) {
      char cHAR = (char)myFile.read();  //      Serial.print(cHAR);
      ret = String(cHAR);
      rEAD += ret;                      //      Serial.print(rEAD);
    }
    myFile.close();
  } else {
    Serial.println("error opening count.txt");
  }
  Serial.print("Convert to Int: ");
  int valRead = rEAD.toInt();                 Serial.println(valRead, 3);
  return valRead;
}

/****************************Update timeout Count*******************************/
void updateCount(int count) {
  Serial.println("Removing count.txt...");    SD.remove("count.txt");

  myFile = SD.open("count.txt", FILE_WRITE);
  if (myFile) {
    Serial.print("Writing new count: ");      Serial.print(count);
    myFile.println(count);                    myFile.close();
    Serial.println(" . . .done.");
  } else {
    Serial.println("error opening count.txt");
  }
}

/****************************Print Data to Serial*******************************/
void serialPrintData() {
  Serial.print("Voltage:");         Serial.println(Voltage);
  Serial.print("Current:");         Serial.println(Current, 4);
  Serial.print("Power factor:");    Serial.println(PowerFactor);
  Serial.print("Frequency:");       Serial.println(Frequency);
  Serial.print("Active power:");    Serial.println(ActivePower, 3);
  Serial.print("Energy Pulse:");    Serial.println(energyP, 5);
  Serial.print("Energy Pulse Accumulated:");  Serial.println(EnergyPacc, 5);
  Serial.print("Energy:");          Serial.println(energy, 5);
  Serial.print("Energy Accumulated:");        Serial.println(EnergyAcc, 5);
  Serial.print("EnergykWh:");       Serial.println(energykWh, 5);
  Serial.println(" ");              delay(20);
}

/***********************Functions to get Date and Time*************************/
String _readSerial()
{
  uint64_t timeOld = millis();
  while (!gprsSerial.available() && !(millis() > timeOld + TIME_OUT_READ_SERIAL))
  {
    delay(13);
  }

  String str;
  while (gprsSerial.available())
  {
    if (gprsSerial.available() > 0)
    {
      str += (char) gprsSerial.read();
    }
  }
  return str;
}

//----------------------------------------------------------------------
void ShowSerialData()
{
  while (gprsSerial.available() != 0)
  {
    Serial.write(gprsSerial.read());
    //delay(50);
  }
  gprsSerial.flush();
}

/***************************Functions for ANIMATION DISPLAY**********************/

/***********************************Animate Bulb*********************************/
void displayBulb(int x, int y ) {
  tft.drawBitmap(x, y, bulb0, 40, 40, ST77XX_YELLOW);    delay(50);
  tft.drawBitmap(x, y, bulb1, 40, 40, ST77XX_YELLOW);    delay(50);
  tft.drawBitmap(x, y, bulb2, 40, 40, ST77XX_YELLOW);    delay(50);
  tft.drawBitmap(x, y, bulb3, 40, 40, ST77XX_YELLOW);    delay(50);
  tft.drawBitmap(x, y, bulb4, 40, 40, ST77XX_YELLOW);    delay(50);
  tft.drawBitmap(x, y, bulb6, 40, 40, ST77XX_YELLOW);    delay(50);
  tft.drawBitmap(x, y, bulb7, 40, 40, ST77XX_YELLOW);    delay(50);
  tft.drawBitmap(x, y, bulb8, 40, 40, ST77XX_YELLOW);    delay(50);
  tft.drawBitmap(x, y, bulb9, 40, 40, ST77XX_YELLOW);    delay(50);
  tft.drawBitmap(x, y, bulb10, 40, 40, ST77XX_YELLOW);    delay(50);
  tft.drawBitmap(x, y, bulb11, 40, 40, ST77XX_YELLOW);    delay(50);
  tft.drawBitmap(x, y, bulb12, 40, 40, ST77XX_YELLOW);    delay(50);
  tft.drawBitmap(x, y, bulb13, 40, 40, ST77XX_YELLOW);    delay(50);
}

/**********************************Animate Upload***********************************/
void displayUpload(int x, int y) {
  tft.drawBitmap(x, y, upload0, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload1, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload2, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload3, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload4, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload5, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload6, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload7, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload8, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload9, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload10, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload11, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload12, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload13, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload14, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload15, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload16, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload17, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload18, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload19, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload20, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload21, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload22, 48, 48, ST77XX_BLUE);    delay(100);
  tft.drawBitmap(x, y, upload23, 48, 48, ST77XX_BLUE);    delay(100);
}

/*************************Functions for LOADING TRIANGLE DISPLAY*************************/

/*******************************Get centroid of triangle*********************************/
_point getCoordCentroid( _point a, _point b, _point c ) {
  _point o;

  o.x = (int16_t)((a.x + b.x + c.x) / 3);
  o.y = (int16_t)((a.y + b.y + c.y) / 3);

  return o;
}

/****************************Rotate triangle around point r******************************/
void rotateTriangle( _point &a, _point &b, _point &c, _point r, int16_t deg ) {

  // Convert degrees to radians
  float angle = (float)deg * 1000 / 57296;

  // Rotate each individual point
  a = rotatePoint( r, angle, a);
  b = rotatePoint( r, angle, b);
  c = rotatePoint( r, angle, c);
}

/****************************Rotate each point p around c*******************************/
_point rotatePoint( _point c, float angle, _point p ) {
  _point r;

  r.x = cos(angle) * (p.x - c.x) - sin(angle) * (p.y - c.y) + c.x;
  r.y = sin(angle) * (p.x - c.x) + cos(angle) * (p.y - c.y) + c.y;

  return r;
}